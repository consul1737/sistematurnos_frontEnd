{"version":3,"file":"js/511.50bd399b.js","mappings":"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","sources":["webpack://pvn-fe/./src/components/MyCalendar.vue","webpack://pvn-fe/src/components/MyCalendar.vue","webpack://pvn-fe/./src/components/MyCalendar.vue?e788","webpack://pvn-fe/./src/components/MyCalendar.vue?9263"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-card-title',{attrs:{\"card-title\":\"\",\"primary-title\":\"\"}},[_vm._v(\"📅 Calendario de turnos\")])],1),_c('v-col',{staticClass:\"d-flex flex-column align-center pa-6\",attrs:{\"cols\":\"3\"}},[_c('v-btn',{staticClass:\"ma-3\",staticStyle:{\"width\":\"100%\"},attrs:{\"color\":\"primary\"},on:{\"click\":_vm.handleCreateTurno}},[_vm._v(\"+ Nuevo Turno\")]),_c('v-divider'),_c('v-row',{attrs:{\"justify\":\"center\"}},[_c('v-date-picker',{attrs:{\"no-title\":\"\",\"full-width\":\"\",\"header-date-format\":_vm.formatHeaderDate},model:{value:(_vm.picker),callback:function ($$v) {_vm.picker=$$v},expression:\"picker\"}})],1)],1),_c('v-col',{attrs:{\"cols\":\"9\"}},[_c('section',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\",\"margin\":\"10px 50px\"}},[_c('div',{staticClass:\"d-flex align-center\"},[_c('v-btn',{staticClass:\"ma-1\",attrs:{\"small\":\"\",\"outlined\":\"\"},on:{\"click\":_vm.prev}},[_c('v-icon',[_vm._v(\"mdi-chevron-left\")])],1),_c('v-btn',{staticClass:\"ma-1\",attrs:{\"small\":\"\",\"outlined\":\"\"},on:{\"click\":_vm.next}},[_c('v-icon',[_vm._v(\"mdi-chevron-right\")])],1),(_vm.$refs.calendar && _vm.$refs.calendar.title)?_c('v-toolbar-title',[_vm._v(\" \"+_vm._s(_vm.$refs.calendar.title.toUpperCase())+\" \")]):_vm._e()],1),_c('v-btn-toggle',{staticClass:\"d-flex\",attrs:{\"outlined\":\"\"},model:{value:(_vm.type),callback:function ($$v) {_vm.type=$$v},expression:\"type\"}},[_c('v-btn',{attrs:{\"value\":\"month\"}},[_c('span',{staticClass:\"hidden-sm-and-down\"},[_vm._v(\"Mes\")])]),_c('v-btn',{attrs:{\"value\":\"week\"}},[_c('span',{staticClass:\"hidden-sm-and-down\"},[_vm._v(\"Semana\")])]),_c('v-btn',{attrs:{\"value\":\"day\"}},[_c('span',{staticClass:\"hidden-sm-and-down\"},[_vm._v(\"Diario\")])]),_c('v-btn',{attrs:{\"value\":\"list\"}},[_c('span',{staticClass:\"hidden-sm-and-down\"},[_vm._v(\"Lista\")])])],1)],1),_c('v-sheet',{staticClass:\"pa-10\",attrs:{\"height\":\"600\"}},[_c('v-container',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.type === 'list'),expression:\"type === 'list'\"}]},[_c('v-card',{staticClass:\"mt-4\"},[_c('v-card-title',[_vm._v(\"Eventos del mes\")]),_c('v-list',[(Object.keys(_vm.groupedEventsByDay).length === 0)?[_c('v-list-item',[_c('v-list-item-content',[_c('v-alert',{staticClass:\"mb-0\",attrs:{\"type\":\"info\",\"dense\":\"\"}},[_vm._v(\" No hay eventos para este mes. \")])],1)],1)]:[_c('transition-group',{attrs:{\"name\":\"list\",\"tag\":\"div\"}},[_vm._l((_vm.groupedEventsByDay),function(events,date){return [_c('v-list-item-group',{key:date,staticClass:\"pa-2\"},[_c('v-subheader',{staticClass:\"text-uppercase text-h6 font-weight-bold\",staticStyle:{\"background-color\":\"#c1c1c1\",\"border\":\"1px solid #8e8e8e\"},attrs:{\"color\":\"primary\"}},[_vm._v(\" \"+_vm._s(new Intl.DateTimeFormat(\"es-ES\", { weekday: \"long\", day: \"numeric\", }).format(new Date(date)))+\" \")]),(events.length > 0)?_vm._l((events),function(event,idx){return _c('v-list-item',{key:`event-${date}-${idx}`,staticStyle:{\"cursor\":\"pointer\",\"border-bottom\":\"1px solid #8e8e8e\"},on:{\"click\":function($event){return _vm.showEvent({ event: event })}}},[_c('v-list-item-content',[_c('v-list-item-title',{staticStyle:{\"font-size\":\"0.8rem\"}},[_c('span',{style:({\n                                  display: 'inline-block',\n                                  width: '10px',\n                                  height: '10px',\n                                  borderRadius: '50%',\n                                  backgroundColor: event.color,\n                                  marginRight: '8px',\n                                })}),_vm._v(\" \"+_vm._s(new Date(event.start).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\", }))+\" - \"+_vm._s(event.name)+\" \")])],1)],1)}):[_c('v-list-item',[_c('v-list-item-content',[_c('v-alert',{staticClass:\"mb-0\",attrs:{\"type\":\"info\",\"dense\":\"\"}},[_vm._v(\" No hay actividades este día. \")])],1)],1)]],2)]})],2)]],2)],1)],1),_c('v-calendar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.type !== 'list'),expression:\"type !== 'list'\"}],ref:\"calendar\",attrs:{\"weekdays\":_vm.weekday,\"type\":_vm.type === 'list' ? 'month' : _vm.type,\"events\":_vm.events,\"event-overlap-threshold\":30,\"event-color\":_vm.getEventColor,\"locale\":\"es\"},on:{\"change\":_vm.onCalendarChange,\"click:event\":_vm.showEvent},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)],1)],1),_c('v-dialog',{attrs:{\"scrollable\":\"\",\"overlay\":false,\"max-width\":\"500px\",\"transition\":\"dialog-transition\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-toolbar',{attrs:{\"flat\":\"\",\"height\":\"50px\",\"tile\":\"\",\"dark\":\"\",\"color\":\"primary\"}},[_c('v-btn',{attrs:{\"icon\":\"\",\"dark\":\"\"},on:{\"click\":function($event){_vm.dialog = false}}},[_c('v-icon',[_vm._v(\"mdi-close\")])],1),(_vm.isEdit)?_c('v-btn',{attrs:{\"icon\":\"\",\"dark\":\"\"},on:{\"click\":_vm.eliminarTurno}},[_c('v-icon',[_vm._v(\"mdi-delete\")])],1):_vm._e(),_c('v-toolbar-title',[_vm._v(_vm._s(_vm.isEdit ? \"Editar Turno\" : \"Nuevo Turno\"))])],1),_c('v-card-text',{staticClass:\"pa-4\"},[_c('v-autocomplete',{attrs:{\"label\":\"Paciente\",\"items\":_vm.pacientes,\"item-text\":(paciente) => `${paciente.nombre} ${paciente.apellido}`,\"item-value\":\"id_paciente\",\"outlined\":\"\",\"dense\":\"\",\"required\":\"\"},model:{value:(_vm.nuevoTurno.id_paciente),callback:function ($$v) {_vm.$set(_vm.nuevoTurno, \"id_paciente\", $$v)},expression:\"nuevoTurno.id_paciente\"}}),_c('v-select',{attrs:{\"label\":\"Consultorio\",\"items\":_vm.consultorios,\"item-text\":\"nombre\",\"item-value\":\"id_consultorio\",\"outlined\":\"\",\"dense\":\"\",\"required\":\"\"},on:{\"change\":_vm.cargarTratamientosPorConsultorio},scopedSlots:_vm._u([{key:\"item\",fn:function({ item }){return [_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\"}},[_c('div',{style:({\n                  width: '12px',\n                  height: '12px',\n                  borderRadius: '50%',\n                  backgroundColor: item.color || '#ccc',\n                  marginRight: '8px',\n                })}),_c('span',[_vm._v(_vm._s(item.nombre))])])]}}]),model:{value:(_vm.nuevoTurno.id_consultorio),callback:function ($$v) {_vm.$set(_vm.nuevoTurno, \"id_consultorio\", $$v)},expression:\"nuevoTurno.id_consultorio\"}}),_c('v-select',{attrs:{\"label\":\"Tratamiento\",\"items\":_vm.tratamientosDisponibles,\"item-text\":\"nombre_tratamiento\",\"item-value\":\"id_tratamiento\",\"outlined\":\"\",\"dense\":\"\",\"required\":\"\"},on:{\"change\":_vm.actualizarDetallesTratamiento},scopedSlots:_vm._u([{key:\"item\",fn:function({ item }){return [_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\"}},[_c('div',{style:({\n                  width: '12px',\n                  height: '12px',\n                  borderRadius: '50%',\n                  backgroundColor: item.color,\n                  marginRight: '8px',\n                })}),_c('span',[_vm._v(_vm._s(item.nombre_tratamiento))])])]}}]),model:{value:(_vm.nuevoTurno.id_tratamiento),callback:function ($$v) {_vm.$set(_vm.nuevoTurno, \"id_tratamiento\", $$v)},expression:\"nuevoTurno.id_tratamiento\"}}),_c('v-menu',{ref:\"menuFecha\",attrs:{\"close-on-content-click\":false,\"transition\":\"scale-transition\",\"offset-y\":\"\",\"min-width\":\"290px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-text-field',_vm._g(_vm._b({attrs:{\"label\":\"Fecha\",\"prepend-icon\":\"mdi-calendar\",\"readonly\":\"\",\"outlined\":\"\",\"dense\":\"\",\"required\":\"\"},model:{value:(_vm.nuevoTurno.fecha),callback:function ($$v) {_vm.$set(_vm.nuevoTurno, \"fecha\", $$v)},expression:\"nuevoTurno.fecha\"}},'v-text-field',attrs,false),on))]}}]),model:{value:(_vm.menuFecha),callback:function ($$v) {_vm.menuFecha=$$v},expression:\"menuFecha\"}},[_c('v-date-picker',{attrs:{\"no-title\":\"\",\"locale\":\"es\",\"header-date-format\":_vm.formatHeaderDate},on:{\"input\":function($event){_vm.menuFecha = false}},model:{value:(_vm.nuevoTurno.fecha),callback:function ($$v) {_vm.$set(_vm.nuevoTurno, \"fecha\", $$v)},expression:\"nuevoTurno.fecha\"}})],1),_c('v-menu',{ref:\"menuHora\",attrs:{\"close-on-content-click\":false,\"transition\":\"scale-transition\",\"offset-y\":\"\",\"min-width\":\"auto\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-text-field',_vm._g(_vm._b({attrs:{\"label\":\"Seleccionar hora\",\"prepend-icon\":\"mdi-clock-time-four-outline\",\"suffix\":\"HH:MM\",\"outlined\":\"\",\"dense\":\"\",\"required\":\"\"},model:{value:(_vm.horaFormateada),callback:function ($$v) {_vm.horaFormateada=$$v},expression:\"horaFormateada\"}},'v-text-field',attrs,false),on))]}}]),model:{value:(_vm.menuHora),callback:function ($$v) {_vm.menuHora=$$v},expression:\"menuHora\"}},[_c('v-time-picker',{attrs:{\"format\":\"24hr\"},on:{\"input\":function($event){_vm.menuHora = false}},model:{value:(_vm.nuevoTurno.hora),callback:function ($$v) {_vm.$set(_vm.nuevoTurno, \"hora\", $$v)},expression:\"nuevoTurno.hora\"}})],1),_c('v-text-field',{attrs:{\"label\":\"Duración del Tratamiento\",\"outlined\":\"\",\"dense\":\"\",\"readonly\":\"\",\"suffix\":\"minutos\"},model:{value:(_vm.tratamientoSeleccionado.duracion),callback:function ($$v) {_vm.$set(_vm.tratamientoSeleccionado, \"duracion\", $$v)},expression:\"tratamientoSeleccionado.duracion\"}}),_c('v-text-field',{attrs:{\"label\":\"Costo del Tratamiento\",\"prefix\":\"$\",\"outlined\":\"\",\"dense\":\"\",\"readonly\":\"\"},model:{value:(_vm.tratamientoSeleccionado.costo),callback:function ($$v) {_vm.$set(_vm.tratamientoSeleccionado, \"costo\", $$v)},expression:\"tratamientoSeleccionado.costo\"}})],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"success\"},on:{\"click\":_vm.guardarTurno}},[_vm._v(\" \"+_vm._s(_vm.isEdit ? \"Guardar Cambios\" : \"Guardar Turno\")+\" \")])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card-title card-title primary-title\n          >📅 Calendario de turnos</v-card-title\n        >\n      </v-col>\n      <v-col cols=\"3\" class=\"d-flex flex-column align-center pa-6\">\n        <v-btn\n          color=\"primary\"\n          class=\"ma-3\"\n          style=\"width: 100%\"\n          @click=\"handleCreateTurno\"\n          >+ Nuevo Turno</v-btn\n        >\n        <v-divider></v-divider>\n        <v-row justify=\"center\">\n          <v-date-picker\n            v-model=\"picker\"\n            no-title\n            full-width\n            :header-date-format=\"formatHeaderDate\"\n          ></v-date-picker>\n        </v-row>\n      </v-col>\n      <v-col cols=\"9\">\n        <section\n          style=\"\n            display: flex;\n            justify-content: space-between;\n            margin: 10px 50px;\n          \"\n        >\n          <div class=\"d-flex align-center\">\n            <v-btn class=\"ma-1\" small outlined @click=\"prev\">\n              <v-icon>mdi-chevron-left</v-icon>\n            </v-btn>\n            <v-btn class=\"ma-1\" small outlined @click=\"next\">\n              <v-icon>mdi-chevron-right</v-icon>\n            </v-btn>\n\n            <v-toolbar-title v-if=\"$refs.calendar && $refs.calendar.title\">\n              {{ $refs.calendar.title.toUpperCase() }}\n            </v-toolbar-title>\n          </div>\n\n          <v-btn-toggle v-model=\"type\" outlined class=\"d-flex\">\n            <v-btn value=\"month\">\n              <span class=\"hidden-sm-and-down\">Mes</span>\n            </v-btn>\n            <v-btn value=\"week\">\n              <span class=\"hidden-sm-and-down\">Semana</span>\n            </v-btn>\n            <v-btn value=\"day\">\n              <span class=\"hidden-sm-and-down\">Diario</span>\n            </v-btn>\n            <v-btn value=\"list\">\n              <span class=\"hidden-sm-and-down\">Lista</span>\n            </v-btn>\n          </v-btn-toggle>\n        </section>\n\n        <v-sheet height=\"600\" class=\"pa-10\">\n          <v-container v-show=\"type === 'list'\">\n            <v-card class=\"mt-4\">\n              <v-card-title>Eventos del mes</v-card-title>\n              <v-list>\n                <template v-if=\"Object.keys(groupedEventsByDay).length === 0\">\n                  <!-- Si no hay eventos, mostrar el alert -->\n                  <v-list-item>\n                    <v-list-item-content>\n                      <v-alert type=\"info\" dense class=\"mb-0\">\n                        No hay eventos para este mes.\n                      </v-alert>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n\n                <template v-else>\n                  <transition-group name=\"list\" tag=\"div\">\n                    <template v-for=\"(events, date) in groupedEventsByDay\">\n                      <v-list-item-group class=\"pa-2\" :key=\"date\">\n                        <v-subheader\n                          color=\"primary\"\n                          style=\"\n                            background-color: #c1c1c1;\n                            border: 1px solid #8e8e8e;\n                          \"\n                          class=\"text-uppercase text-h6 font-weight-bold\"\n                        >\n                          {{\n                            new Intl.DateTimeFormat(\"es-ES\", {\n                              weekday: \"long\",\n                              day: \"numeric\",\n                            }).format(new Date(date))\n                          }}\n                        </v-subheader>\n\n                        <template v-if=\"events.length > 0\">\n                          <v-list-item\n                            v-for=\"(event, idx) in events\"\n                            :key=\"`event-${date}-${idx}`\"\n                            style=\"\n                              cursor: pointer;\n                              border-bottom: 1px solid #8e8e8e;\n                            \"\n                            @click=\"showEvent({ event: event })\"\n                          >\n                            <v-list-item-content>\n                              <v-list-item-title style=\"font-size: 0.8rem\">\n                                <span\n                                  :style=\"{\n                                    display: 'inline-block',\n                                    width: '10px',\n                                    height: '10px',\n                                    borderRadius: '50%',\n                                    backgroundColor: event.color,\n                                    marginRight: '8px',\n                                  }\"\n                                ></span>\n                                {{\n                                  new Date(event.start).toLocaleTimeString([], {\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                  })\n                                }}\n                                - {{ event.name }}\n                              </v-list-item-title>\n                            </v-list-item-content>\n                          </v-list-item>\n                        </template>\n\n                        <template v-else>\n                          <v-list-item>\n                            <v-list-item-content>\n                              <v-alert type=\"info\" dense class=\"mb-0\">\n                                No hay actividades este día.\n                              </v-alert>\n                            </v-list-item-content>\n                          </v-list-item>\n                        </template>\n                      </v-list-item-group>\n                    </template>\n                  </transition-group>\n                </template>\n              </v-list>\n            </v-card>\n          </v-container>\n\n          <v-calendar\n            v-show=\"type !== 'list'\"\n            ref=\"calendar\"\n            v-model=\"value\"\n            :weekdays=\"weekday\"\n            :type=\"type === 'list' ? 'month' : type\"\n            :events=\"events\"\n            :event-overlap-threshold=\"30\"\n            :event-color=\"getEventColor\"\n            @change=\"onCalendarChange\"\n            @click:event=\"showEvent\"\n            locale=\"es\"\n          >\n          </v-calendar>\n        </v-sheet>\n      </v-col>\n    </v-row>\n    <!--nuevo turno dialog-->\n    <v-dialog\n      v-model=\"dialog\"\n      scrollable\n      :overlay=\"false\"\n      max-width=\"500px\"\n      transition=\"dialog-transition\"\n    >\n      <v-card>\n        <v-toolbar flat height=\"50px\" tile dark color=\"primary\">\n          <v-btn icon dark @click=\"dialog = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n          <v-btn v-if=\"isEdit\" @click=\"eliminarTurno\" icon dark>\n            <v-icon>mdi-delete</v-icon>\n          </v-btn>\n          <v-toolbar-title>{{\n            isEdit ? \"Editar Turno\" : \"Nuevo Turno\"\n          }}</v-toolbar-title>\n        </v-toolbar>\n        <v-card-text class=\"pa-4\">\n          <!-- Selector de Paciente -->\n          <v-autocomplete\n            label=\"Paciente\"\n            v-model=\"nuevoTurno.id_paciente\"\n            :items=\"pacientes\"\n            :item-text=\"(paciente) => `${paciente.nombre} ${paciente.apellido}`\"\n            item-value=\"id_paciente\"\n            outlined\n            dense\n            required\n          />\n          <!-- Selector de Consultorio -->\n          <v-select\n            label=\"Consultorio\"\n            :items=\"consultorios\"\n            item-text=\"nombre\"\n            item-value=\"id_consultorio\"\n            v-model=\"nuevoTurno.id_consultorio\"\n            @change=\"cargarTratamientosPorConsultorio\"\n            outlined\n            dense\n            required\n          >\n            <template v-slot:item=\"{ item }\">\n              <div style=\"display: flex; align-items: center\">\n                <div\n                  :style=\"{\n                    width: '12px',\n                    height: '12px',\n                    borderRadius: '50%',\n                    backgroundColor: item.color || '#ccc',\n                    marginRight: '8px',\n                  }\"\n                ></div>\n                <span>{{ item.nombre }}</span>\n              </div>\n            </template>\n          </v-select>\n          <!-- Selector de Tratamientos -->\n          <v-select\n            label=\"Tratamiento\"\n            :items=\"tratamientosDisponibles\"\n            item-text=\"nombre_tratamiento\"\n            item-value=\"id_tratamiento\"\n            v-model=\"nuevoTurno.id_tratamiento\"\n            @change=\"actualizarDetallesTratamiento\"\n            outlined\n            dense\n            required\n          >\n            <template v-slot:item=\"{ item }\">\n              <div style=\"display: flex; align-items: center\">\n                <div\n                  :style=\"{\n                    width: '12px',\n                    height: '12px',\n                    borderRadius: '50%',\n                    backgroundColor: item.color,\n                    marginRight: '8px',\n                  }\"\n                ></div>\n                <span>{{ item.nombre_tratamiento }}</span>\n              </div>\n            </template>\n          </v-select>\n\n          <!-- Selector de Fecha -->\n          <v-menu\n            ref=\"menuFecha\"\n            v-model=\"menuFecha\"\n            :close-on-content-click=\"false\"\n            transition=\"scale-transition\"\n            offset-y\n            min-width=\"290px\"\n          >\n            <template #activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"nuevoTurno.fecha\"\n                label=\"Fecha\"\n                prepend-icon=\"mdi-calendar\"\n                readonly\n                v-bind=\"attrs\"\n                v-on=\"on\"\n                outlined\n                dense\n                required\n              />\n            </template>\n            <v-date-picker\n              no-title\n              v-model=\"nuevoTurno.fecha\"\n              @input=\"menuFecha = false\"\n              locale=\"es\"\n              :header-date-format=\"formatHeaderDate\"\n            ></v-date-picker>\n          </v-menu>\n\n          <!-- Selector de Hora -->\n          <v-menu\n            ref=\"menuHora\"\n            v-model=\"menuHora\"\n            :close-on-content-click=\"false\"\n            transition=\"scale-transition\"\n            offset-y\n            min-width=\"auto\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"horaFormateada\"\n                label=\"Seleccionar hora\"\n                prepend-icon=\"mdi-clock-time-four-outline\"\n                suffix=\"HH:MM\"\n                outlined\n                dense\n                required\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-time-picker\n              v-model=\"nuevoTurno.hora\"\n              @input=\"menuHora = false\"\n              format=\"24hr\"\n            ></v-time-picker>\n          </v-menu>\n\n          <!-- Duración y Costo del Tratamiento -->\n          <v-text-field\n            label=\"Duración del Tratamiento\"\n            v-model=\"tratamientoSeleccionado.duracion\"\n            outlined\n            dense\n            readonly\n            suffix=\"minutos\"\n          ></v-text-field>\n          <v-text-field\n            label=\"Costo del Tratamiento\"\n            v-model=\"tratamientoSeleccionado.costo\"\n            prefix=\"$\"\n            outlined\n            dense\n            readonly\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"success\" @click=\"guardarTurno\">\n            {{ isEdit ? \"Guardar Cambios\" : \"Guardar Turno\" }}\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data: () => ({\n    turnos: [],\n    type: \"day\",\n    types: [\n      { text: \"Mes\", value: \"month\" },\n      { text: \"Semana\", value: \"week\" },\n      { text: \"Día\", value: \"day\" },\n      { text: \"Lista\", value: \"list\" },\n    ],\n    weekday: [0, 1, 2, 3, 4, 5, 6],\n    value: \"\",\n    currentMonth: null, // Nuevo dato para almacenar el mes actual\n    currentYear: null, // Nuevo dato para almacenar el año actual\n    picker: new Date(Date.now() - new Date().getTimezoneOffset() * 60000)\n      .toISOString()\n      .substr(0, 10),\n    events: [],\n    dialog: false,\n    isEdit: false,\n    pacientes: [],\n    consultorios: [],\n    tratamientosDisponibles: [],\n    tratamientoSeleccionado: {\n      duracion: null,\n      costo: null,\n    },\n    nuevoTurno: {\n      id_paciente: null,\n      fecha: \"\",\n      hora: \"\",\n      estado: \"pendiente\",\n      id_consultorio: null,\n      id_tratamiento: null,\n    },\n    menuFecha: false,\n    menuFechaFiltro: false,\n    filtroFecha: \"\",\n    menuHora: false,\n    // validarDatosTurno: false,\n  }),\n\n  methods: {\n    formatHeaderDate(date) {\n      // console.log(\"Valor de date recibido:\", date); // Depuración\n\n      // Verificar si el valor es una cadena como \"2025-02\"\n      if (typeof date === \"string\" && date.match(/^\\d{4}-\\d{2}$/)) {\n        const [year, month] = date.split(\"-\"); // Separar el año y el mes\n        date = new Date(parseInt(year, 10), parseInt(month, 10) - 1, 1); // Crear un objeto Date (meses son base 0)\n      }\n\n      // Verificar si el valor es un objeto Date válido\n      if (!date || !(date instanceof Date) || isNaN(date)) {\n        return \"FECHA INVÁLIDA\"; // Mensaje de error o valor predeterminado\n      }\n\n      // Obtener el nombre del mes y el año por separado\n      const monthName = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n        date\n      );\n      const yearValue = date.getFullYear();\n\n      // Combinar el mes y el año sin \"de\" y en mayúsculas\n      return `${monthName.toUpperCase()} ${yearValue}`;\n    },\n    async cargarTurnos() {\n      try {\n        const response = await axios.get(\"/turnos/calendario\");\n        this.turnos = response.data;\n        // console.log(\"Turnos cargados:\", this.turnos);\n        // Esperar a que Vue reactive los datos antes de llamar a getEvents()\n        this.$nextTick(() => {\n          this.getEvents();\n        });\n      } catch (error) {\n        console.error(\"Error al cargar turnos:\", error);\n      }\n    },\n    getEvents() {\n      this.events = [];\n\n      // Mapear los turnos a eventos\n      const eventos = this.turnos.map((turno) => {\n        const fechaHoraInicio = new Date(`${turno.fecha}T${turno.hora}`);\n        const duracion = turno.duracion_tratamiento;\n        const fechaHoraFin = new Date(\n          fechaHoraInicio.getTime() + duracion * 60000\n        );\n\n        return {\n          id_turno: turno.id_turno,\n          id_paciente: turno.id_paciente,\n          id_consultorio: turno.id_consultorio,\n          id_tratamiento: turno.id_tratamiento,\n          name: `${turno.nombre_paciente} ${turno.apellido_paciente}`,\n          start: fechaHoraInicio,\n          end: fechaHoraFin,\n          color: turno.color_tratamiento,\n          timed: true,\n        };\n      });\n\n      // Ordenar los eventos por fecha de inicio (start)\n      eventos.sort((a, b) => a.start - b.start);\n\n      // Asignar los eventos ordenados a this.events\n      this.events = eventos;\n    },\n    onCalendarChange({ start }) {\n      const date = new Date(start.date);\n      this.currentMonth = date.getUTCMonth(); // Usar getUTCMonth() para evitar problemas de zona horaria\n      this.currentYear = date.getUTCFullYear(); // Usar getUTCFullYear() para evitar problemas de zona horaria\n      this.$forceUpdate(); // Forzar la actualización de la vista\n    },\n    prev() {\n      if (this.$refs.calendar) {\n        this.$refs.calendar.prev();\n      }\n    },\n    next() {\n      if (this.$refs.calendar) {\n        this.$refs.calendar.next();\n      }\n    },\n    getEventColor(event) {\n      return event.color;\n    },\n    handleCreateTurno() {\n      this.isEdit = false;\n      this.dialog = true;\n    },\n\n    showEvent({ event }) {\n      this.dialog = true;\n      this.isEdit = true;\n\n      // Crear una copia del evento para evitar mutaciones directas\n      const updatedEvent = { ...event };\n\n      // Asignar los datos del evento al objeto nuevoTurno\n      this.nuevoTurno = {\n        id_turno: updatedEvent.id_turno,\n        id_paciente: updatedEvent.id_paciente,\n        fecha: updatedEvent.start ? this.formatDate(updatedEvent.start) : null,\n        hora: updatedEvent.start ? this.formatTime(updatedEvent.start) : null,\n        estado: updatedEvent.estado || \"pendiente\",\n        id_consultorio: updatedEvent.id_consultorio,\n        id_tratamiento: updatedEvent.id_tratamiento,\n      };\n\n      // Cargar los tratamientos disponibles para el consultorio seleccionado\n      if (updatedEvent.id_consultorio) {\n        this.cargarTratamientosPorConsultorio(updatedEvent.id_consultorio);\n      }\n\n      // Si hay un tratamiento seleccionado, cargar sus detalles\n      if (updatedEvent.id_tratamiento) {\n        this.actualizarDetallesTratamiento(updatedEvent.id_tratamiento);\n      }\n    },\n\n    formatDate(date) {\n      const d = new Date(date);\n      return d.toISOString().split(\"T\")[0]; // Formato YYYY-MM-DD\n    },\n    formatTime(date) {\n      const d = new Date(date);\n      const hours = String(d.getHours()).padStart(2, \"0\");\n      const minutes = String(d.getMinutes()).padStart(2, \"0\");\n      return `${hours}:${minutes}`; // Formato HH:MM\n    },\n    async cargarPacientes() {\n      try {\n        const response = await axios.get(\"/pacientes\");\n        this.pacientes = response.data;\n        // console.log(\"Pacientes cargados:\", this.pacientes);\n      } catch (error) {\n        console.error(\"Error al cargar pacientes:\", error);\n      }\n    },\n\n    async fetchConsultoriosyTratamientos() {\n      try {\n        const response = await axios.get(\"/consultorios/tratamientos\");\n        this.consultorios = response.data\n          .map((consultorio) => ({\n            id_consultorio: consultorio.id_consultorio,\n            nombre: consultorio.nombre_consultorio,\n            tratamiento: consultorio.id_tratamiento\n              ? [\n                  {\n                    id_tratamiento: consultorio.id_tratamiento,\n                    nombre: consultorio.nombre_tratamiento,\n                    descripcion: consultorio.descripcion_tratamiento,\n                    costo: consultorio.costo_tratamiento,\n                    duracion: consultorio.duracion_tratamiento,\n                    color: consultorio.color_tratamiento,\n                  },\n                ]\n              : [], // Si no hay tratamiento, devuelve un array vacío\n            displayText: `${consultorio.nombre_consultorio} -  ${\n              consultorio.id_tratamiento\n                ? consultorio.nombre_tratamiento\n                : \"Sin tratamiento\"\n            }`,\n          }))\n          .sort((a, b) => a.id_consultorio - b.id_consultorio);\n      } catch (error) {\n        console.error(\"Error fetching consultorios and tratamientos:\", error);\n      }\n    },\n    async cargarTratamientosPorConsultorio(id_consultorio) {\n      try {\n        // Llamar al backend para obtener los tratamientos asociados al consultorio\n        const response = await axios.get(\n          `/tratamientos/tratamientosconsul/${id_consultorio}`\n        );\n        this.tratamientosDisponibles = response.data || [];\n\n        // Si estamos editando un turno, cargar los detalles del tratamiento seleccionado\n        if (this.isEdit && this.nuevoTurno.id_tratamiento) {\n          this.actualizarDetallesTratamiento(this.nuevoTurno.id_tratamiento);\n        } else {\n          // Reiniciar el tratamiento seleccionado y sus detalles si no estamos editando\n          this.nuevoTurno.id_tratamiento = null;\n          this.tratamientoSeleccionado = { duracion: null, costo: null };\n        }\n      } catch (error) {\n        console.error(\"Error al cargar tratamientos:\", error.message);\n        this.tratamientosDisponibles = [];\n      }\n    },\n    actualizarDetallesTratamiento(id_tratamiento) {\n      // Buscar el tratamiento en la lista de tratamientos disponibles\n\n      const tratamiento = this.tratamientosDisponibles.find(\n        (t) => t.id_tratamiento === id_tratamiento\n      );\n\n      if (tratamiento) {\n        // Asignar los detalles del tratamiento\n        this.tratamientoSeleccionado = {\n          duracion: tratamiento.duracion,\n          costo: tratamiento.costo,\n        };\n      } else {\n        // Si no se encuentra el tratamiento, limpiar los detalles\n        this.tratamientoSeleccionado = { duracion: null, costo: null };\n      }\n    },\n    guardarTurno() {\n      if (this.isEdit) {\n        this.updateTurno(this.nuevoTurno);\n      } else {\n        this.createTurno(this.nuevoTurno);\n      }\n    },\n    async createTurno(turno) {\n      try {\n        const response = await axios.post(\"/turnos\", turno);\n        // this.$toast.success(response.data.message || \"Turno creado con éxito.\");\n        this.cargarTurnos();\n        this.dialog = false;\n      } catch (error) {\n        // console.error(\"Error al crear el turno:\", error);\n        const errorMessage =\n          error.response?.data?.message || \"Error al crear el turno.\";\n        this.$toast.error(errorMessage);\n      }\n    },\n    async updateTurno(turno) {\n      //console.log(turno);\n      try {\n        const response = await axios.put(`/turnos/${turno.id_turno}`, turno);\n\n        this.cargarTurnos();\n        this.dialog = false;\n      } catch (error) {\n        console.error(\"Error al actualizar el turno:\", error);\n        const errorMessage =\n          error.response?.data?.message || \"Error al actualizar el turno.\";\n        this.$toast.error(errorMessage);\n      }\n    },\n\n    eliminarTurno() {\n      if (this.nuevoTurno.id_turno) {\n        axios\n          .delete(`/turnos/${this.nuevoTurno.id_turno}`)\n          .then(() => {\n            this.cargarTurnos();\n            this.dialog = false;\n          })\n          .catch((error) => {\n            console.error(\"Error al eliminar el turno:\", error);\n            this.$toast.error(\"Error al eliminar el turno.\");\n          });\n      }\n    },\n  },\n\n  mounted() {\n    this.cargarTurnos();\n    this.cargarPacientes();\n    this.fetchConsultoriosyTratamientos();\n    this.$nextTick(() => {\n      if (this.$refs.calendar) {\n        this.value = this.$refs.calendar.value;\n        const date = new Date(this.value);\n        this.currentMonth = date.getUTCMonth(); // Usar getUTCMonth() para evitar problemas de zona horaria\n        this.currentYear = date.getUTCFullYear(); // Inicializar el año actual\n        this.$forceUpdate(); // Forzar actualización de Vue para reflejar los cambios\n      }\n    });\n  },\n  watch: {\n    dialog(val) {\n      if (!val) {\n        this.nuevoTurno = {\n          id_paciente: null,\n          fecha: \"\",\n          hora: \"\",\n          estado: \"pendiente\",\n          id_consultorio_tratamiento: null,\n        };\n      }\n    },\n  },\n  computed: {\n    groupedEventsByDay() {\n      if (this.currentMonth === null || this.currentYear === null) return {};\n\n      const grouped = this.events.reduce((acc, event) => {\n        const eventDate = new Date(event.start);\n        const eventMonth = eventDate.getUTCMonth();\n        const eventYear = eventDate.getUTCFullYear();\n\n        if (\n          eventMonth === this.currentMonth &&\n          eventYear === this.currentYear\n        ) {\n          const dateKey = `${eventYear}-${(eventMonth + 1)\n            .toString()\n            .padStart(2, \"0\")}-${eventDate\n            .getUTCDate()\n            .toString()\n            .padStart(2, \"0\")}`;\n\n          if (!acc[dateKey]) {\n            acc[dateKey] = [];\n          }\n\n          acc[dateKey].push(event);\n        }\n\n        return acc;\n      }, {});\n\n      // Ordenar las fechas\n      const sortedGrouped = {};\n      Object.keys(grouped)\n        .sort((a, b) => new Date(a) - new Date(b))\n        .forEach((key) => {\n          sortedGrouped[key] = grouped[key];\n        });\n\n      return sortedGrouped;\n    },\n    // tratamientoSeleccionado() {\n    //   const consultorio = this.consultorios.find(\n    //     (c) => c.id_consultorio === this.nuevoTurno.id_consultorio\n    //   );\n    //   return consultorio && consultorio.tratamiento.length > 0\n    //     ? consultorio.tratamiento[0]\n    //     : { duracion: \"\", costo: \"\" };\n    // },\n    horaFormateada() {\n      if (!this.nuevoTurno.hora) return \"\";\n      return this.nuevoTurno.hora;\n    },\n    validarDatosTurno() {\n      // Verificar que todos los campos requeridos estén presentes y sean válidos\n      return (\n        !!this.nuevoTurno.id_paciente && // Asegurarse de que haya un paciente seleccionado\n        !!this.nuevoTurno.id_consultorio && // Asegurarse de que haya un consultorio seleccionado\n        !!this.nuevoTurno.id_tratamiento && // Asegurarse de que haya un tratamiento seleccionado\n        !!this.nuevoTurno.fecha && // Asegurarse de que haya una fecha seleccionada\n        !!this.nuevoTurno.hora && // Asegurarse de que haya una hora seleccionada\n        this.nuevoTurno.fecha.trim() !== \"\" && // Asegurarse de que la fecha no sea una cadena vacía\n        this.nuevoTurno.hora.trim() !== \"\" // Asegurarse de que la hora no sea una cadena vacía\n      );\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyCalendar.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyCalendar.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MyCalendar.vue?vue&type=template&id=2f9320d9\"\nimport script from \"./MyCalendar.vue?vue&type=script&lang=js\"\nexport * from \"./MyCalendar.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","_v","staticClass","staticStyle","on","handleCreateTurno","formatHeaderDate","model","value","picker","callback","$$v","expression","prev","next","$refs","calendar","title","_s","toUpperCase","_e","type","directives","name","rawName","Object","keys","groupedEventsByDay","length","_l","events","date","key","Intl","DateTimeFormat","weekday","day","format","Date","event","idx","$event","showEvent","style","display","width","height","borderRadius","backgroundColor","color","marginRight","start","toLocaleTimeString","hour","minute","ref","getEventColor","onCalendarChange","dialog","isEdit","eliminarTurno","pacientes","paciente","nombre","apellido","nuevoTurno","id_paciente","$set","consultorios","cargarTratamientosPorConsultorio","scopedSlots","_u","fn","item","id_consultorio","tratamientosDisponibles","actualizarDetallesTratamiento","nombre_tratamiento","id_tratamiento","_g","_b","fecha","menuFecha","horaFormateada","menuHora","hora","tratamientoSeleccionado","duracion","costo","guardarTurno","staticRenderFns","data","turnos","types","text","currentMonth","currentYear","now","getTimezoneOffset","toISOString","substr","estado","menuFechaFiltro","filtroFecha","methods","match","year","month","split","parseInt","isNaN","monthName","yearValue","getFullYear","cargarTurnos","response","axios","get","$nextTick","getEvents","error","console","eventos","map","turno","fechaHoraInicio","duracion_tratamiento","fechaHoraFin","getTime","id_turno","nombre_paciente","apellido_paciente","end","color_tratamiento","timed","sort","a","b","getUTCMonth","getUTCFullYear","$forceUpdate","updatedEvent","formatDate","formatTime","d","hours","String","getHours","padStart","minutes","getMinutes","cargarPacientes","fetchConsultoriosyTratamientos","consultorio","nombre_consultorio","tratamiento","descripcion","descripcion_tratamiento","costo_tratamiento","displayText","message","find","t","updateTurno","createTurno","post","errorMessage","$toast","put","delete","then","catch","mounted","watch","val","id_consultorio_tratamiento","computed","grouped","reduce","acc","eventDate","eventMonth","eventYear","dateKey","toString","getUTCDate","push","sortedGrouped","forEach","validarDatosTurno","trim","component"],"sourceRoot":""}